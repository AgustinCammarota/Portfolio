---
import {
  PUBLIC_EMAIL,
  PUBLIC_LINKEDIN,
  PUBLIC_GITHUB,
  PUBLIC_WHATSAPP,
} from "astro:env/client";
import { Icon } from "astro-icon/components";
import { getLangFromUrl, useTranslations } from "@i18n/utils";

interface Social {
  name: string;
  action: string;
  ariaLabel: string;
  nofollow: boolean;
}

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const socials: Social[] = [
  {
    name: "github",
    action: PUBLIC_GITHUB,
    ariaLabel: t("social.github"),
    nofollow: false,
  },
  {
    name: "linkedin",
    action: PUBLIC_LINKEDIN,
    ariaLabel: t("social.linkedin"),
    nofollow: false,
  },
  {
    name: "email",
    action: PUBLIC_EMAIL,
    ariaLabel: t("social.email"),
    nofollow: false,
  },
  {
    name: "phone",
    action: PUBLIC_WHATSAPP,
    ariaLabel: t("social.phone"),
    nofollow: true,
  },
];
---

<section class="social-section">
  {
    socials.map((social: Social) => (
      <a
        href={social.action}
        class="social-icon-link"
        target="_blank"
        rel={`${social.nofollow ? "noopener noreferrer nofollow" : "noopener noreferrer"}`}
        title={social.ariaLabel}
        aria-label={social.ariaLabel}
        data-name={social.name}
      >
        <Icon name={social.name} title={social.name} size="24" />
      </a>
    ))
  }
</section>
<style>
  .social-section {
    width: max-content;
    height: auto;
  }
  .social-icon-link {
    display: inline-block;
    width: max-content;
    height: auto;
    margin: 0 6px;
    color: var(--tertiary-color);
    cursor: pointer;
    transition: transform linear 0.2s;
  }
  .social-icon-link:first-of-type {
    margin-left: 0;
  }
  .social-icon-link:hover {
    color: var(--secondary-color);
    transform: scale(1.2);
  }
  /* @media */
  @media (min-width: 900px) {
    .social-icon-link {
      margin: 0 8px;
      svg {
        width: 28px;
        height: 28px;
      }
    }
  }
</style>
<script>
  document.addEventListener("astro:page-load", addEventListenerElements);

  function addEventListenerElements() {
    const links =
      document.querySelectorAll<HTMLAnchorElement>(".social-icon-link");
    if (links && links.length) {
      links.forEach((link) => {
        link.addEventListener("click", (event: MouseEvent) => {
          const target = event.target as HTMLElement;
          const link = target.closest(".social-icon-link") as HTMLAnchorElement;
          sendAnalyticsEvent("social_link_click", {
            social_network: link.dataset.name || "",
            link_url: link.href,
          });
        });
      });
    }
  }

  function sendAnalyticsEvent(eventName: string, data: unknown) {
    window.gtag("event", eventName, data);
  }
</script>
