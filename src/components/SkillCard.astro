---
import SkillIcon from "./SkillIcon.astro";
import type { Icon } from "@interfaces/icon.interface";

interface Props {
  title: string;
  icons: Icon[];
}

const { title, icons } = Astro.props;
---

<div class="skill-card" data-name={`skill-${title.toLowerCase()}`}>
  <h2 class="skill-card__title">{title}</h2>
  <div class="skill-container">
    {
      icons.map((icon: Icon) => (
        <SkillIcon description={icon.description} name={icon.name} />
      ))
    }
  </div>
</div>
<style>
  .skill-card {
    width: 100%;
    max-width: 400px;
    min-width: 300px;
    height: max-content;
    border: 1px solid var(--tertiary-color);
    animation: borderAnimation 6s infinite linear;
    border-image: linear-gradient(
        90deg,
        var(--tertiary-color),
        var(--tertiary-color),
        var(--tertiary-color),
        var(--tertiary-color)
      )
      1;

    .skill-card__title {
      width: 100%;
      padding: 16px;
      border-bottom: 1px solid var(--tertiary-color);
      color: var(--secondary-color);
      margin: 0;
      font-size: 1.6rem;
      font-weight: 500;
    }
  }
  .skill-container {
    width: 100%;
    height: auto;
    padding: 16px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    gap: 24px;
  }
  @keyframes borderAnimation {
    0% {
      border-image-source: linear-gradient(
        90deg,
        var(--primary-color),
        var(--primary-color),
        var(--tertiary-color),
        var(--tertiary-color)
      );
    }
    25% {
      border-image-source: linear-gradient(
        180deg,
        var(--primary-color),
        var(--primary-color),
        var(--tertiary-color),
        var(--tertiary-color)
      );
    }
    50% {
      border-image-source: linear-gradient(
        270deg,
        var(--primary-color),
        var(--primary-color),
        var(--tertiary-color),
        var(--tertiary-color)
      );
    }
    75% {
      border-image-source: linear-gradient(
        360deg,
        var(--primary-color),
        var(--primary-color),
        var(--tertiary-color),
        var(--tertiary-color)
      );
    }
    100% {
      border-image-source: linear-gradient(
        90deg,
        var(--primary-color),
        var(--primary-color),
        var(--tertiary-color),
        var(--tertiary-color)
      );
    }
  }
  @media (prefers-reduced-motion: reduce) {
    .skill-card {
      animation: none;
    }
  }
  /* @media */
  @media (min-width: 600px) {
    .skill-card {
      height: 100%;
      min-width: 350px;
    }
  }
  @media (min-width: 900px) {
    .skill-card {
      max-width: 450px;
    }
  }
</style>
